// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"MeldAPI/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
)

type InvoiceListSecurity struct {
	PMOAuth2Authentication string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

// InvoiceListDeclined - declined
type InvoiceListDeclined string

const (
	InvoiceListDeclinedTrue  InvoiceListDeclined = "true"
	InvoiceListDeclinedFalse InvoiceListDeclined = "false"
)

func (e InvoiceListDeclined) ToPointer() *InvoiceListDeclined {
	return &e
}

func (e *InvoiceListDeclined) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "true":
		fallthrough
	case "false":
		*e = InvoiceListDeclined(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceListDeclined: %v", v)
	}
}

// InvoiceListPaid - paid
type InvoiceListPaid string

const (
	InvoiceListPaidFalse InvoiceListPaid = "false"
	InvoiceListPaidTrue  InvoiceListPaid = "true"
)

func (e InvoiceListPaid) ToPointer() *InvoiceListPaid {
	return &e
}

func (e *InvoiceListPaid) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "false":
		fallthrough
	case "true":
		*e = InvoiceListPaid(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceListPaid: %v", v)
	}
}

// InvoiceListStatus - status
type InvoiceListStatus string

const (
	InvoiceListStatusDraft     InvoiceListStatus = "DRAFT"
	InvoiceListStatusSubmitted InvoiceListStatus = "SUBMITTED"
	InvoiceListStatusInReview  InvoiceListStatus = "IN_REVIEW"
	InvoiceListStatusHold      InvoiceListStatus = "HOLD"
	InvoiceListStatusDeclined  InvoiceListStatus = "DECLINED"
	InvoiceListStatusApproved  InvoiceListStatus = "APPROVED"
	InvoiceListStatusPaid      InvoiceListStatus = "PAID"
)

func (e InvoiceListStatus) ToPointer() *InvoiceListStatus {
	return &e
}

func (e *InvoiceListStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DRAFT":
		fallthrough
	case "SUBMITTED":
		fallthrough
	case "IN_REVIEW":
		fallthrough
	case "HOLD":
		fallthrough
	case "DECLINED":
		fallthrough
	case "APPROVED":
		fallthrough
	case "PAID":
		*e = InvoiceListStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceListStatus: %v", v)
	}
}

type InvoiceListRequest struct {
	// The management ID (MID), found in the first number of your URL when logged in:  https://app.propertymeld.com/{MID}/m/123
	XPmOrg int64 `header:"style=simple,explode=false,name=X-Pm-Org"`
	// created__gte
	CreatedGte *string `queryParam:"style=form,explode=true,name=created__gte"`
	// created__interval
	CreatedInterval *string `queryParam:"style=form,explode=true,name=created__interval"`
	// created__lte
	CreatedLte *string `queryParam:"style=form,explode=true,name=created__lte"`
	// declined
	Declined *InvoiceListDeclined `queryParam:"style=form,explode=true,name=declined"`
	// Number of results to return per page.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// The initial index from which to return the results.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Which field to use when ordering the results.
	Ordering *string `queryParam:"style=form,explode=true,name=ordering"`
	// paid
	Paid *InvoiceListPaid `queryParam:"style=form,explode=true,name=paid"`
	// payment_requested__gte
	PaymentRequestedGte *string `queryParam:"style=form,explode=true,name=payment_requested__gte"`
	// payment_requested__interval
	PaymentRequestedInterval *string `queryParam:"style=form,explode=true,name=payment_requested__interval"`
	// payment_requested__lte
	PaymentRequestedLte *string `queryParam:"style=form,explode=true,name=payment_requested__lte"`
	// status
	Status *InvoiceListStatus `queryParam:"style=form,explode=true,name=status"`
	// vendor
	Vendor *string `queryParam:"style=form,explode=true,name=vendor"`
	// vendors
	Vendors *string `queryParam:"style=form,explode=true,name=vendors"`
}

type InvoiceListResponse struct {
	ContentType                            string
	PaginatedMeldInvoiceSerializerListList *shared.PaginatedMeldInvoiceSerializerListList
	StatusCode                             int
	RawResponse                            *http.Response
}
