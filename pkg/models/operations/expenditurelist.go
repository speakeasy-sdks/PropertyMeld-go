// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"MeldAPI/pkg/models/shared"
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type ExpenditureListSecurity struct {
	PMOAuth2Authentication string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

type ExpenditureListStatus string

const (
	ExpenditureListStatusApproved ExpenditureListStatus = "APPROVED"
	ExpenditureListStatusBilled   ExpenditureListStatus = "BILLED"
	ExpenditureListStatusDraft    ExpenditureListStatus = "DRAFT"
	ExpenditureListStatusHold     ExpenditureListStatus = "HOLD"
	ExpenditureListStatusInReview ExpenditureListStatus = "IN_REVIEW"
)

func (e ExpenditureListStatus) ToPointer() *ExpenditureListStatus {
	return &e
}

func (e *ExpenditureListStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APPROVED":
		fallthrough
	case "BILLED":
		fallthrough
	case "DRAFT":
		fallthrough
	case "HOLD":
		fallthrough
	case "IN_REVIEW":
		*e = ExpenditureListStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExpenditureListStatus: %v", v)
	}
}

type ExpenditureListRequest struct {
	// The management ID (MID), found in the first number of your URL when logged in:  https://app.propertymeld.com/{MID}/m/123
	XPmOrg          int64      `header:"style=simple,explode=false,name=X-Pm-Org"`
	CreatedGte      *time.Time `queryParam:"style=form,explode=true,name=created__gte"`
	CreatedInterval *time.Time `queryParam:"style=form,explode=true,name=created__interval"`
	CreatedLte      *time.Time `queryParam:"style=form,explode=true,name=created__lte"`
	// Number of results to return per page.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// The initial index from which to return the results.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Which field to use when ordering the results.
	Ordering *string                 `queryParam:"style=form,explode=true,name=ordering"`
	Status   []ExpenditureListStatus `queryParam:"style=form,explode=true,name=status"`
}

type ExpenditureListResponse struct {
	ContentType                                         string
	PaginatedMeldExpendituresListViewSerializerListList *shared.PaginatedMeldExpendituresListViewSerializerListList
	StatusCode                                          int
	RawResponse                                         *http.Response
}
