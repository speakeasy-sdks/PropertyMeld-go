// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SuccessfulMeldFrequencyEnum string

const (
	SuccessfulMeldFrequencyEnumImmediately SuccessfulMeldFrequencyEnum = "IMMEDIATELY"
	SuccessfulMeldFrequencyEnumDaily       SuccessfulMeldFrequencyEnum = "DAILY"
	SuccessfulMeldFrequencyEnumNever       SuccessfulMeldFrequencyEnum = "NEVER"
)

func (e SuccessfulMeldFrequencyEnum) ToPointer() *SuccessfulMeldFrequencyEnum {
	return &e
}

func (e *SuccessfulMeldFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IMMEDIATELY":
		fallthrough
	case "DAILY":
		fallthrough
	case "NEVER":
		*e = SuccessfulMeldFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SuccessfulMeldFrequencyEnum: %v", v)
	}
}
