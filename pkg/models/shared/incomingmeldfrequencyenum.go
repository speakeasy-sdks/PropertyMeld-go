// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IncomingMeldFrequencyEnum string

const (
	IncomingMeldFrequencyEnumImmediately IncomingMeldFrequencyEnum = "IMMEDIATELY"
	IncomingMeldFrequencyEnumDaily       IncomingMeldFrequencyEnum = "DAILY"
	IncomingMeldFrequencyEnumNever       IncomingMeldFrequencyEnum = "NEVER"
)

func (e IncomingMeldFrequencyEnum) ToPointer() *IncomingMeldFrequencyEnum {
	return &e
}

func (e *IncomingMeldFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IMMEDIATELY":
		fallthrough
	case "DAILY":
		fallthrough
	case "NEVER":
		*e = IncomingMeldFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IncomingMeldFrequencyEnum: %v", v)
	}
}
