// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OwnerApprovalStatusEnum string

const (
	OwnerApprovalStatusEnumOwnerApprovalNotRequested       OwnerApprovalStatusEnum = "OWNER_APPROVAL_NOT_REQUESTED"
	OwnerApprovalStatusEnumOwnerApprovalRequested          OwnerApprovalStatusEnum = "OWNER_APPROVAL_REQUESTED"
	OwnerApprovalStatusEnumOwnerApprovalApproved           OwnerApprovalStatusEnum = "OWNER_APPROVAL_APPROVED"
	OwnerApprovalStatusEnumOwnerApprovalNotApproved        OwnerApprovalStatusEnum = "OWNER_APPROVAL_NOT_APPROVED"
	OwnerApprovalStatusEnumOwnerApprovalRequestedEstimates OwnerApprovalStatusEnum = "OWNER_APPROVAL_REQUESTED_ESTIMATES"
)

func (e OwnerApprovalStatusEnum) ToPointer() *OwnerApprovalStatusEnum {
	return &e
}

func (e *OwnerApprovalStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OWNER_APPROVAL_NOT_REQUESTED":
		fallthrough
	case "OWNER_APPROVAL_REQUESTED":
		fallthrough
	case "OWNER_APPROVAL_APPROVED":
		fallthrough
	case "OWNER_APPROVAL_NOT_APPROVED":
		fallthrough
	case "OWNER_APPROVAL_REQUESTED_ESTIMATES":
		*e = OwnerApprovalStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OwnerApprovalStatusEnum: %v", v)
	}
}
