// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HubAccessLevelEnum string

const (
	HubAccessLevelEnumDirectOnly       HubAccessLevelEnum = "DIRECT_ONLY"
	HubAccessLevelEnumAllNotifications HubAccessLevelEnum = "ALL_NOTIFICATIONS"
	HubAccessLevelEnumInvitedToHub     HubAccessLevelEnum = "INVITED_TO_HUB"
	HubAccessLevelEnumHubAccess        HubAccessLevelEnum = "HUB_ACCESS"
)

func (e HubAccessLevelEnum) ToPointer() *HubAccessLevelEnum {
	return &e
}

func (e *HubAccessLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DIRECT_ONLY":
		fallthrough
	case "ALL_NOTIFICATIONS":
		fallthrough
	case "INVITED_TO_HUB":
		fallthrough
	case "HUB_ACCESS":
		*e = HubAccessLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HubAccessLevelEnum: %v", v)
	}
}
